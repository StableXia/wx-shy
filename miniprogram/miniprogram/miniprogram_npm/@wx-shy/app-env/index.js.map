{"version":3,"sources":["index.js","appEnv.js","apiHost.js","storage.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;AELA,ADGA,ADGA;AELA,ADGA,ADGA;AELA,ADGA,ADGA;AELA,ADGA,ADGA,AGTA;ADIA,ADGA,ADGA,AGTA;ADIA,ADGA,ADGA,AGTA;ADIA,ADGA,ADGA,AGTA;ADIA,ADGA,ADGA,AGTA;ADIA,ADGA,ADGA,AGTA;ADIA,ADGA,ADGA,AGTA;ADIA,ADGA,ADGA,AGTA;ADIA,ADGA,ADGA,AGTA;ADIA,ADGA,ADGA,AGTA;ADIA,ADGA,ADGA,AGTA;ADIA,ADGA,ADGA,AGTA;ADIA,ADGA,ADGA,AGTA;ADIA,ADGA,ADGA,AGTA;ADIA,ADGA,ADGA,AGTA;ADIA,ADGA,ADGA,AGTA;ADIA,ADGA,ADGA,AGTA;ADIA,ADGA,ADGA,AGTA;ADIA,ADGA,ADGA,AGTA;ADIA,ADGA,ADGA,AGTA;ADIA,ADGA,ADGA,AGTA;ADIA,ADGA,ADGA,AGTA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;AACA;AACA","file":"index.js","sourcesContent":["\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _appEnv = require(\"./appEnv\");\n\nObject.keys(_appEnv).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _appEnv[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _appEnv[key];\n    }\n  });\n});\n\nvar _apiHost = require(\"./apiHost\");\n\nObject.keys(_apiHost).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _apiHost[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _apiHost[key];\n    }\n  });\n});","\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getEnv = getEnv;\nexports.APP_ENV = exports.APP_ENV_RELEASE = exports.APP_ENV_TRIAL = exports.APP_ENV_DEVELOP = void 0;\nconst APP_ENV_DEVELOP = \"develop\";\nexports.APP_ENV_DEVELOP = APP_ENV_DEVELOP;\nconst APP_ENV_TRIAL = \"trial\";\nexports.APP_ENV_TRIAL = APP_ENV_TRIAL;\nconst APP_ENV_RELEASE = \"release\";\nexports.APP_ENV_RELEASE = APP_ENV_RELEASE;\nconst APP_ENV = {\n  develop: APP_ENV_DEVELOP,\n  trial: APP_ENV_TRIAL,\n  release: APP_ENV_RELEASE\n};\nexports.APP_ENV = APP_ENV;\n\nfunction getEnvByWxConfig() {\n  try {\n    return __wxConfig.envVersion;\n  } catch (error) {\n    return null;\n  }\n}\n\nfunction getEnvByAccountInfo() {\n  try {\n    const accountInfo = wx.getAccountInfoSync();\n    return accountInfo.miniProgram.envVersion;\n  } catch (error) {\n    return null;\n  }\n}\n/**\n * 获取当前环境变量\n */\n\n\nfunction getEnv(defaultEnv = APP_ENV_RELEASE) {\n  return getEnvByWxConfig() || getEnvByAccountInfo() || defaultEnv;\n}","\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setApiHost = setApiHost;\nexports.getApiHost = getApiHost;\nexports.setCurrrentApiHost = setCurrrentApiHost;\nexports.getCurrrentApiHost = getCurrrentApiHost;\n\nvar _storage = require(\"./storage\");\n\nconst API_HOST_STORAGE_KEY = \"__api_host_storage_key__\";\nconst CURRENT_API_HOST_STORAGE_KEY = \"__current_api_host_storage_key__\";\n\nfunction setApiHost(data) {\n  (0, _storage.setStorage)(API_HOST_STORAGE_KEY, data);\n}\n\nfunction getApiHost() {\n  return (0, _storage.getStorage)(API_HOST_STORAGE_KEY);\n}\n\nfunction setCurrrentApiHost(data, reset = true) {\n  if (reset) {\n    (0, _storage.setStorage)(CURRENT_API_HOST_STORAGE_KEY, data);\n    return;\n  }\n\n  if (getCurrrentApiHost()) {\n    return;\n  }\n\n  (0, _storage.setStorage)(CURRENT_API_HOST_STORAGE_KEY, data);\n}\n\nfunction getCurrrentApiHost() {\n  return (0, _storage.getStorage)(CURRENT_API_HOST_STORAGE_KEY);\n}","\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getStorage = getStorage;\nexports.setStorage = setStorage;\nexports.removeStorage = removeStorage;\nexports.clearStorage = clearStorage;\n\nfunction getStorage(key) {\n  return wx.getStorageSync(key);\n}\n\nfunction setStorage(key, data) {\n  wx.setStorageSync(key, data);\n}\n\nfunction removeStorage(key) {\n  wx.removeStorageSync(key);\n}\n\nfunction clearStorage() {\n  wx.clearStorageSync();\n}"]}